// Generated by IcedCoffeeScript 1.2.0r
  var Base, Derived,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  Base = (function() {

    Base.name = 'Base';

    function Base() {}

    return Base;

  })();

  Derived = (function(_super) {

    __extends(Derived, _super);

    Derived.name = 'Derived';

    function Derived() {
      return Derived.__super__.constructor.apply(this, arguments);
    }

    return Derived;

  })(Base);

  this.time = function(fun) {
    var start;
    start = new Date();
    fun();
    return new Date() - start;
  };

  this.isNumber = function(obj) {
    return (obj === +obj) || Object.prototype.toString.call(obj) === '[object Number]';
  };

  this.isUndefined = function(obj) {
    return typeof obj === 'undefined';
  };

  this.onKeyUp = function(key, fun) {
    var _this = this;
    return window.addEventListener('keydown', function(e) {
      if (_this.isNumber(key) && key === e.keyCode || key.toUpperCase() === String.fromCharCode(e.keyCode || e.charCode).toUpperCase()) {
        fun();
      }
    });
  };

  this.createElement = function(tag, innerHTML) {
    var elem;
    elem = document.createElement(tag);
    elem.innerHTML = innerHTML;
    return [elem, elem.children];
  };

  this.delay = function(func, wait) {
    var args;
    args = this.tail(arguments, 2);
    return setTimeout((function() {
      return func.apply(func, args);
    }), wait);
  };

  this.soon = function(func) {
    return this.delay.apply(this, [func, 1].concat(this.tail(arguments)));
  };

  this.tail = function(array, index) {
    return Array.prototype.slice.call(array, this.isUndefined(index) ? 1 : index);
  };
