$type-name-tt-or-ps-idx: 0;
$type-name-family-idx:   1;
$type-name-style-idx:    2;
$type-name-weight-idx:   3;
$type-name-stretch-idx:  4;

@function type-name-is-postscript-flavored($name) {
  @return 'p' == get-char-at($name, $type-name-tt-or-ps-idx);
}

@function type-name-get-font-family-fallback($name) {
  $f: get-char-at($name, $type-name-family-idx);
  $d: get-char-at($name, $type-name-stretch-idx);
  $f: if($f == 's', $serif-fallback,
      if($f == 'a', if($d == 'c', $sans-condensed-fallback, $sans-fallback),
      if($f == 'm', $mono-fallback,
                    type-name-get-font-family-fallback-error)));
  @return $f;
}

@function type-name-get-font-weight($name) {
  $w: get-char-at($name, $type-name-weight-idx);
  $w: if($w == '2', 200,
      if($w == '4', 400,
      if($w == '7', 700,
                    type-name-get-font-weight-error)));
  @return $w;
}

@function type-name-get-font-style($name) {
  $s: get-char-at($name, $type-name-style-idx);
  $s: if($s == 'n', normal,
      if($s == 'i', italic,
      if($s == 'o', oblique,
                    type-name-get-font-style-error)));
  @return $s;
}

@function type-name-get-font-stretch($name) {
  $s: get-char-at($name, $type-name-style-idx);
  $s: if($s == 'n', normal,
      if($s == 'c', condensed,
                    type-name-get-font-stretch-error));
  @return $s;
}

@function em($px) {
  @if type_of($px) is list {
    @return multiply-each($px, 1.0 / $body-ppem * 1em);
  } @else {
    @return if(0 == $px, 0, $px / $body-ppem * 1em);
  }
}

@function rem($px) {
  $scale: 1.0 / $pprem * 1rem;
  // $scale: 1px;
  
  @if type_of($px) is list {
    @return multiply-each($px, $scale);
  } @else {
    @return if(0 == $px, 0, $px * $scale);
  }
}
