$type-name-tt-or-ps-idx: 0;
$type-name-family-idx:   1;
$type-name-style-idx:    2;
$type-name-weight-idx:   3;
$type-name-stretch-idx:  4;

@function type-name-is-postscript-flavored($name) {
  @return 'p' == get_char_at($name, $type-name-tt-or-ps-idx);
}

@function type-name-get-font-family-fallback($name) {
  $f: get_char_at($name, $type-name-family-idx);
  $d: get_char_at($name, $type-name-stretch-idx);
  $f: if($f == 's', $serif-fallback,
      if($f == 'a', if($d == 'c', $sans-fallback, $sans-condensed-fallback),
      if($f == 'm', $mono-fallback,
                    type-name-get-font-family-fallback-error)));
  @return $f;
}

@function type-name-get-font-weight($name) {
  $w: get_char_at($name, $type-name-weight-idx);
  $w: if($w == '2', 200,
      if($w == '4', 400,
      if($w == '7', 700,
                    type-name-get-font-weight-error)));
  @return $w;
}

@function type-name-get-font-style($name) {
  $s: get_char_at($name, $type-name-style-idx);
  $s: if($s == 'n', normal,
      if($s == 'i', italic,
      if($s == 'o', oblique,
                    type-name-get-font-style-error)));
  @return $s;
}

@function type-name-get-font-stretch($name) {
  $s: get_char_at($name, $type-name-style-idx);
  $s: if($s == 'n', normal,
      if($s == 'c', condensed,
                    type-name-get-font-stretch-error));
  @return $s;
}

@function rhythm-get-baseline($font-family, $ppem, $ppel) {
  $leading: ($ppel - $ppem);
  
  // $dummy: debug-warn-if(is-odd($leading), "Leading (line-height #{$ppel} - font-size #{$ppem}) is #{$leading}, which isn't an even number, so that a whole pixel amount lands above and below the lines.");

  @return ($leading / 2) + get_metric_for_metric(baseline, $font-family, ppem, $ppem);
  
}

@function rhythm-distance-to-next($font-family, $ppem, $ppel, $root-font-family, $root-ppem, $root-ppel) {
  
  @return rhythm-get-baseline($root-font-family, $root-ppem, $root-ppel) 
        - rhythm-get-baseline($font-family, $ppem, $ppel) % $ppel;
}
