$dummy: try-reload-extensions();

$base-normalize-include-fields-forms-etcetera: false;
$base-normalize-include-typography-etcetera:   false;

$type-disable-font-face:                       false;
$type-fallback-make-obvious:                   true;
$type-fallback-common-web-safe-only:           true;

@import "framework/extern";
@import "framework/const";
@import "framework/func";
@import "framework/mixin";

//* Up to this point, no styling should be applied - we've only defined
//* constants, functions, and mixins. Hence the resulting compressed CSS
//* file (with comments stripped, etc.) should be of zero size. */
 
@each $font in get_font_list() {
 @include font-face($font);
}

@import "base/base-normalize";
@import "base/base-reset";
@import "base/base-type";

// @include respond-to(default)  { @include debug-message("default #{$body-ppem}/#{$body-ppgd}"); }
// @include respond-to(narrow)   { @include debug-message("narrow #{$body-ppem}/#{$body-ppgd}"); }
// @include respond-to(narrower) { @include debug-message("narrower #{$body-ppem}/#{$body-ppgd}"); }
// @include respond-to(wide)     { @include debug-message("wide #{$body-ppem}/#{$body-ppgd}"); }
// @include respond-to(wider)    { @include debug-message("wider #{$body-ppem}/#{$body-ppgd}"); }

html {
  min-height: 100%;
  width: 100%;
  max-width: 100%;
  overflow: hidden;
}

body {
  position: relative;
  min-height: 100%;
  width: 100%;
  max-width: 100%;
  margin: 0 auto;  
}

figure { overflow: hidden; }

#dimensions {
  @extend %tmn4n;
  position: fixed;
  background-color: rgba($color-black, 0.7);
  color: rgba(lighten(saturate($color-blue, 50%), 50%), 0.9);
  position: fixed;
  bottom: 0;
  left: 0;
}
