/* useful: csslint --format=compact _site\css\head.css */

@import "prelude";

@unless $type-disable-font-face {
  @if in-development-mode() { @import url(at-font-face.dev.css); }
  @else { @each $font in get_font_list() { @include at-font-face($font); } }  
}

@import "normalize";
@import "base/base-type";
@import "base/base-util";

html {
  font-size: $pp-rem / $pp-rem-initial-value * 100%;
  line-height: 100%;  
  text-rendering: optimizelegibility;
}

body {
  position: relative;
  width: 100%;
  max-width: 38em;
  margin: 0 auto;
 
  @include color-and-background-color($black, $white);
  @include font-family($body-font-family);
}

::moz-selection { @include color-and-background-color($clr1-ll, $clr0-dd, false); text-shadow: none; }
::selection { @include color-and-background-color($clr1-ll, $clr0-dd, false); text-shadow: none; }
  
a {
  @include link-colors(/* normal  */ $clr0-d,
                       /* hover   */ $clr1,
                       /* active  */ $clr1-l,
                       /* visited */ $clr0-dd,
                       /* focus   */ $clr1);
  
  @include font-family(tsn4n-underline);
  text-decoration: none;
  @include single-transition(color, 0.4s, ease-out);
}

%word-break-all {  
    -ms-word-break: break-all;
      word-break: break-all;
      word-break: break-word; // Non standard for webkit  
}
  
p {
  -webkit-locale: 'en';
  -webkit-hyphens: auto;
    -epub-hyphens: auto;
     -moz-hyphens: auto;
       ms-hyphens: auto;
        o-hyphens: auto;
          hyphens: auto;
}

@include responsive-diet {
  
  @include responsive-type(16px, 24px, _default);
  
  @include responsive-type(16px, 23px, max-width, 32em);
  @include responsive-type(16px, 22px, max-width, 24em);
  
  @include responsive-type(17px, auto, min-width, 44em);  
  @include responsive-type(18px, auto, min-width, 50em);
  @include responsive-type(19px, auto, min-width, 56em);
  @include responsive-type(20px, auto, min-width, 62em);
  @include responsive-type(21px, auto, min-width, 68em);
  @include responsive-type(22px, auto, min-width, 74em);
  @include responsive-type(23px, auto, min-width, 80em);
  @include responsive-type(24px, auto, min-width, 86em);
  
  body {
    @include units(font-size, $pp-em, $pp-rem);
    @include units(line-height, 1el);
  }

  p {
    @include units(margin-bottom, 1el);
  }

  p + p {
    text-indent: 2em;
    @include units(margin-top, -1el);
  }

  %thematic-break {
    text-indent: 0;
    @include units(margin-top, 1el);
  }

  /*
  .type-m { @include change-type(pan7n, cap, 1el) {} }
  .type-l { @include change-type(pan7n, cap, 2el) {} }
  .type-xl { @include change-type(pan7n, ex, 2el) {} }
  .type-xxl { @include change-type(pan7n, cap, 3el) {} }  
  .type-xxxl { @include change-type(pan7n, ex, 3el) {} }

  .type-margin-bottom-1el {
    @include units(margin-bottom, 1el);  }
  
  */
  
  h1 {
    color: $black;
    @include change-type(pan7n-inv, cap, 2el) {
      @include units(margin-bottom, 1el);
    
      $c0: rgba($clr0, 0.3);
      $c1: rgba($clr1, 0.3);
  
      span {
        @include background-image(linear-gradient($c0 0, $c0 50%, $c1 50%, $c1 100%));
        @each $values in units(100% 1el) {
          background-size: $values;
        }
      }
    }
  }
  
  li {
    display: block;
    list-style-type: none;
  }
  
  ol {      
    counter-reset: olc;
    li {
      position: relative;
      text-indent: 0;
    
      &:before {
        display: inline-block;
        text-indent: -1em;
        width: 0;
        counter-increment: olc;        
        line-height: 1em;
        color: $clr1-d;
        text-rendering: optimizespeed;
    
        @include font-family(tsn4n-c2pc);
        font-style: normal;
        content: counter(olc) ".";        
      }
  
      li {
        margin-left: 2em;
        &:before {
          content: counter(olc, upper-alpha) ".";
        }
      }
    }
  }
  
  /*
  h2 {
    @include change-type(pan7n, ex, 1el) {
      color: $clr1-d;
      @include units(margin-top, 1el);
    }
  }
  */
  
  h3 {
    @include change-type(tsn4n-c2pc, ex, 1cap) {
      @include units(margin-top, 1el);
      
    }
  }
  /*
  
  h4, h5, h6 {
    @include change-type(pan4n, cap, 1el) {
      @include units(margin-top, 1el);
    }
  }
    
  */
    
  small { @include change-type(tan4n, cap, $pp-ex) {} } 
  
  blockquote {    
    @include change-type(tsi4n, ppem, $pp-em) {}
    font-style: italic;
    font-weight: 400;
    color: $clr0-dd;
    @include units(margin, 1el 0);
    @include units(padding-left, 1em);
  }
  
  .sidebar {
    position: relative;
    float: right;
    width: 40%;
    margin-left: 1em;
    padding: 0 1em;
    margin-bottom: 1em;
    overflow: hidden;
    
    max-width: 12em;
    // text-align: justify;
    // -ms-text-justify: newspaper;
    
    @include units(margin-top, 1el);
    @include units(padding, (1el 1em));
    
    $top: $pp-bo - $pp-ascent;
    @include units(top, $top);
    
    @include color-and-background-color($clr1-ddd, rgba($clr0-lll, 0.4));
  }
  
  .leading-4x3 {
    @include change-type(tan4n, ppem, max(0.75 * $pp-em, 14px), $leading-el-per-el: 4 / 3) {
      // @include units(margin-top, 0);
    }
  }
  
  @if in-development-mode() {
    .baseline {
      @include background-image-baseline-grid();
    }
  }
  
  @include debug-msg-install();
}

/*
#colorize {
  li { list-style: none; display: block; }
}

.black       { color: $white; background-color: $black   ;}
.white       { color: $black; background-color: $white   ;}
.red-ddd     { color: $white; background-color: $clr1-ddd ;}
.red-dd      { color: $white; background-color: $clr1-dd  ;}
.red-d       { color: $white; background-color: $clr1-d   ;}
.red         { color: $white; background-color: $clr1     ;}
.red-l       { color: $black; background-color: $clr1-l   ;}
.red-ll      { color: $black; background-color: $clr1-ll  ;}
.red-lll     { color: $black; background-color: $clr1-lll ;}
.blue-ddd    { color: $white; background-color: $clr0-ddd;}
.blue-dd     { color: $white; background-color: $clr0-dd ;}
.blue-d      { color: $white; background-color: $clr0-d  ;}
.blue        { color: $white; background-color: $clr0    ;}
.blue-l      { color: $black; background-color: $clr0-l  ;}
.blue-ll     { color: $black; background-color: $clr0-ll ;}
.blue-lll    { color: $black; background-color: $clr0-lll;}
*/


.center-fifty {
  margin: 0 auto;
  width: 50%;
}
  
$margin-add-for-rhythm: 2;
$margin-sub-rhythm: (100 / (100 + $margin-add-for-rhythm));
    
.rhythm {
  margin-right: -($margin-add-for-rhythm) * 1%;
  margin-right: -1em;
  overflow: hidden;
}
                
.melody {
  float: left;
  width: 100% * $margin-sub-rhythm;
  height: auto;
}

.drum {

}

.drum:after {
  content: '| | | | | | | | | | | | | | | | | | | | | | | | | | |';
  // visibility: hidden;
}

blockquote {
  @extend %tsi4n;
}

.foobar:before {
  
  $height: 213px;
  $baseline: 180px;
  $a: $baseline - 162px;
  $c: $baseline - 155px;
  $x: $baseline - 111px;
  $d: $baseline +  44px;
  
  position: absolute;
  top: 0;
  left: 0;
  width:  100%;
  heigth: $height;
  
  @include background-image(linear-gradient(top, $black $a, $clr1 $a, $clr1 $c, $white $c, $white $x, $clr0 $baseline));
  background-size: 100% $height;
}