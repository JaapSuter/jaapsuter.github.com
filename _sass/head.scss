@import "framework/extern";
@import "framework/const";
@import "framework/func";
@import "framework/mixin";

// Up to this point, no styling should be applied - we've only defined
// constants, functions, and mixins. Hence the resulting compressed CSS
// file (with comments stripped, etc.) should be of zero size.

@unless $type-disable-font-face {
  @if in_development_mode { @import url(at-font-face.dev.css); }
  @else { @each $font in get_font_list() { @include at-font-face($font); } }  
} 

@each $font in get_font_list() { @include abstract-font-face-family($font); }

$import-base-normalize-separately: in_development_mode();
@import "base/base-normalize";

@import "base/base-reset";

html {
  font-size: $rem / $rem-assumed-initial * 100%;
  line-height: 100%;
}

@include diet { 
  
  @if in_development_mode() {
    body {
      @include debug-message($responsive-msg);
      @include background-image-baseline-grid();  
    }
  }

  body {
    
    position:  relative;
    color: $black;
    background-color: $white;  
    @extend %#{$body-font-family};
    
    -dev-font-size: $bem;
    -dev-line-height: $el;
    font-size: $bem / $rem * 1em;
    line-height: $el / $bem * 1em;
    line-height: $el / $rem * 1rem;
  }

  p {
    margin: 0;
    padding: 0;
    margin-bottom: $el / $bem * 1em;
    margin-bottom: $el / $rem * 1rem;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: 1em;
    @extend %pan4n;
    color: red;
    margin: 0;
    padding: 0;
  }
}
