@import "prelude";

@unless $type-disable-font-face {
  @if in-development-mode() { @import url(at-font-face.dev.css); }
  @else { @each $font in get_font_list() { @include at-font-face($font); } }  
}

@each $font in get_font_list() { @include abstract-font-face-family($font); }

$import-normalize-separately: in-development-mode();
@import "normalize";
@import "reset";

@import "base/base-type";
@import "base/base-util";

html {
  overflow-y: scroll;
  width: 100%;
  height: 100%;
  
  font-size: $pp-rem / $pp-rem-initial-value * 100%;
  line-height: 100%;  
  text-rendering: optimizelegibility;
}

@if false {
  
::moz-selection { @include color-and-background-color($red-ll, $blue-dd, false); text-shadow: none; }
::selection { @include color-and-background-color($red-ll, $blue-dd, false); text-shadow: none; }
  
figure { overflow: hidden; }

p {
  -webkit-locale: 'en';
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  -epub-hyphens: auto;
  hyphens: auto;
}

}

@include responsive-diet {
  
  @include responsive-type(16px, 24px, _default);
  
  @include responsive-type(16px, 23px, max-width, 32em);
  @include responsive-type(16px, 22px, max-width, 24em);
  
  @include responsive-type(17px, auto, min-width, 44em);  
  @include responsive-type(18px, auto, min-width, 50em);
  @include responsive-type(19px, auto, min-width, 56em);
  @include responsive-type(20px, auto, min-width, 62em);
  @include responsive-type(21px, auto, min-width, 68em);
  @include responsive-type(22px, auto, min-width, 74em);
  @include responsive-type(23px, auto, min-width, 80em);
  @include responsive-type(24px, auto, min-width, 86em);
  
  body {
    position: relative;
    max-width: 38em;
    margin: 0 auto;
    
    @include color-and-background-color($black, $white);
    @extend %#{$body-font-family};
  
    @include units(font-size, $pp-em, $pp-rem);
    @include units(line-height, 1el);
  }

  p { @include units(margin-top, 1el); }

  p + p {
    // text-indent: 2em;
    @include units(text-indent, 1el);
    margin-top: 0;  
  }

  /*
  .type-m { @include change-type(pan7n, cap, 1el) {} }
  .type-l { @include change-type(pan7n, cap, 2el) {} }
  .type-xl { @include change-type(pan7n, ex, 2el) {} }
  .type-xxl { @include change-type(pan7n, cap, 3el) {} }  
  .type-xxxl { @include change-type(pan7n, ex, 3el) {} }

  .type-margin-bottom-1el {
    @include units(margin-bottom, 1el);
  }
  
  */
  
  h1 {
    color: $blue-l;
    @include stroke-using-four-shadows($blue-d);
    @include change-type(pan4n, cap, 2el) {
      @include units(margin-bottom, 1el);
    }
  }
  
  /*
    
  h2 {
    @include change-type(pan7n, ex, 1el) {
      color: $red-d;
      @include units(margin-top, 1el);
    }
  }
  
  h3 {
    @include change-type(tsn4n-smcp, ex, 1cap) {
      text-transform: lowercase;
      text-rendering: optimizespeed;
      letter-spacing: 0.05em;
      word-spacing: 0.3em;
      @include units(margin-top, 1el);
    }    
  }
  
  h4, h5, h6 {
    @include change-type(pan4n, cap, 1el) {
      @include units(margin-top, 1el);
    }
  }
    
  .small { @include change-type(pan4n, cap, $pp-ex) {} }

  blockquote {    
    color: $blue-dd;  
    @include units(margin, 1el 0);
    @include units(padding-left, 1em);
  }    
  */
  
  @if in-development-mode() {
    .baseline {
      @include background-image-baseline-grid();
    }
  }
  
  @include debug-msg-install();
}

/*
#colorize {
  li { list-style: none; display: block; }
}

.black       { color: $white; background-color: $black   ;}
.white       { color: $black; background-color: $white   ;}
.red-ddd     { color: $white; background-color: $red-ddd ;}
.red-dd      { color: $white; background-color: $red-dd  ;}
.red-d       { color: $white; background-color: $red-d   ;}
.red         { color: $white; background-color: $red     ;}
.red-l       { color: $black; background-color: $red-l   ;}
.red-ll      { color: $black; background-color: $red-ll  ;}
.red-lll     { color: $black; background-color: $red-lll ;}
.blue-ddd    { color: $white; background-color: $blue-ddd;}
.blue-dd     { color: $white; background-color: $blue-dd ;}
.blue-d      { color: $white; background-color: $blue-d  ;}
.blue        { color: $white; background-color: $blue    ;}
.blue-l      { color: $black; background-color: $blue-l  ;}
.blue-ll     { color: $black; background-color: $blue-ll ;}
.blue-lll    { color: $black; background-color: $blue-lll;}
*/
