$type-name-tt-or-ps-idx: 0;
$type-name-family-idx:   1;
$type-name-style-idx:    2;
$type-name-weight-idx:   3;
$type-name-stretch-idx:  4;

@function type-name-is-postscript-flavored($name) {
  @return 'p' == get-char-at($name, $type-name-tt-or-ps-idx);
}

@function type-name-get-font-family-fallback($name) {
  
  $f: get-char-at($name, $type-name-family-idx);
  $d: get-char-at($name, $type-name-stretch-idx);
  $f: if($f == 's', $serif-fallback,
      if($f == 'a', if($d == 'c', $sans-condensed-fallback, $sans-fallback),
      if($f == 'm', $mono-fallback,
                    type-name-get-font-family-fallback-error)));
  
  $base-name: trim-to-font-base-name($name);
  @if $base-name != $name {
    $f: $base-name, $f;
  }

  @return $f;
}

@function type-name-get-font-weight($name) {
  $w: get-char-at($name, $type-name-weight-idx);
  $w: if($w == '2', 200,
      if($w == '4', 400,
      if($w == '7', 700,
                    type-name-get-font-weight-error)));
  @return $w;
}

@function type-name-get-font-style($name) {
  $s: get-char-at($name, $type-name-style-idx);
  $s: if($s == 'n', normal,
      if($s == 'i', italic,
      if($s == 'o', oblique,
                    type-name-get-font-style-error)));
  @return $s;
}

@function type-name-get-font-stretch($name) {
  $s: get-char-at($name, $type-name-style-idx);
  $s: if($s == 'n', normal,
      if($s == 'c', condensed,
                    type-name-get-font-stretch-error));
  @return $s;
}

@function incremental-leading($pp-el, $incremental) {
  @if $incremental == same { @return $pp-el; }
  @if $incremental == more { 
    @return try-incremental($pp-el, 3, 4,
            try-incremental($pp-el, 2, 3,
            try-incremental($pp-el, 4, 5,
            try-incremental($pp-el, 5, 7,
            try-incremental($pp-el, 6, 7,
            try-incremental($pp-el, 6, 8,
            try-incremental($pp-el, 7, 8,
            try-incremental($pp-el, 1, 1, $pp-el))))))));
  }  
}


@function font-family($curves, $kind, $stretch, $feature) {
  @if      $kind == serif { $kind: s; }
  @else if $kind == sans  { $kind: a; }
  @else if $kind == mono  { $kind: m; }

  @if      $stretch == normal    { $stretch: n; }
  @else if $stretch == condensed { $stretch: c; }

  @if      $curves == truetype   { $curves: t; }
  @else if $curves == postscript { $curves: p; }

  @if $feature == none { $feature: ''; }
  @else                { $feature: '-#{$feature}'; }

  @return unquote('#{$curves}#{$kind}xx#{$stretch}#{$feature}');
}